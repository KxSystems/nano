// these are also generated by tests but it is better to minimize side-effect of a test


TINYLENGTH: `long$MODIFIER*2047       / object size is 16KB, should fit into a typical L1 cache (32KB)
SMALLLENGTH: `long$MODIFIER*63*k      / obj size is 512KB, should fit into a typical L2 cache (1 or 2MB)
MEDIUMLENGTH: `long$MODIFIER*4*127*k  / obj size is 4MB, should fit into a typical L3 cache depending on the number of workers
LARGELENGTH: `long$MODIFIER*31*M      / obj size is 256MB, should fit into memory only if process count > 1

genIntVec:{[N:`j]
    N4: N div 4;
    p1: til N4; / no duplication
    p2: N4#42;  / same values
    p3: 0N?p1;  / permutation
    p4: N4?10;  / some repetition
    p1,p2,p3,p4
    }

genFloatVec:{[N:`j]
    N4: N div 4;
    p1: `float$til N4;
    p2: N4#42.;  / same values
    p3: 0N?p1;   / permutation
    p4: %[;100] `int$100*N4?100.; / round up a bit to have some duplication
    p1,p2,p3,p4
    }

tinyVec: genIntVec TINYLENGTH
smallVec: genIntVec SMALLLENGTH
mediumVec: genIntVec MEDIUMLENGTH
largeVec: genIntVec LARGELENGTH
largeFloatVec:genFloatVec LARGELENGTH

SYMNR: "J"$getenv `SYMNR
sym: `u#neg[SYMNR]?`4;
largeSymVec: LARGELENGTH?sym;