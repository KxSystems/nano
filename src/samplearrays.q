// these are also generated by tests but it is better to minimize side-effect of a test

{x set `long$MODIFIER*"J"$getenv x} each `TINYLENGTH`SMALLLENGTH`MEDIUMLENGTH`LARGELENGTH;

genIntVec:{[N:`j]
    N4: N div 4;
    p1: til N4; / no duplication
    p2: N4#42;  / same values
    p3: 0N?p1;  / permutation
    p4: N4?10;  / some repetition
    p5: (N mod 4)#-42;
    p1,p2,p3,p4,p5
    }

genFloatVec:{[N:`j]
    N4: N div 4;
    p1: 0.1+til N4;
    p2: N4#42.2;  / same values
    p3: 0N?p1;    / permutation
    p4: %[;100] `int$100*N4?100.1; / round up a bit to have some duplication
    p5: (N mod 4)#-1089.3;
    p1,p2,p3,p4,p5
    }

tinyVec: genIntVec TINYLENGTH
smallVec: genIntVec SMALLLENGTH
mediumVec: genIntVec MEDIUMLENGTH
largeVec: genIntVec LARGELENGTH
largeFloatVec:genFloatVec LARGELENGTH

SYMNR: "J"$getenv `SYMNR
sym: `u#neg[SYMNR]?`4;

.Q.gc[];