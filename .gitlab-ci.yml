default:
  tags:
    - kxi-gitlab-runner

stages:
  - build
  - test

.docker-beforescript:
  stage: build
  image: "docker:20.10.23"
  before_script:
    - |
      if [ -z "$DOCKER_AUTH_CONFIG" ]
      then
        echo "\$DOCKER_AUTH_CONFIG not set, unable to authenticate against container registries"
        exit 1
      fi

    - mkdir -p $HOME/.docker && echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
    - echo ${INT_NEXUS_PASS_RW} | docker login ${INSIGHTS_DEV_NEXUS_REGISTRY} -u ${INT_NEXUS_USER_RW} --password-stdin
  script:
    - INSIGHTSVER=4.1.6
    - wget https://${INT_NEXUS_USER_RO}:${INT_NEXUS_PASS_RO}@ext-nexus.kxi-dev.kx.com/repository/kx-insights-packages/kdbInsightsCore/${INSIGHTSVER}-rc1/kdb-insights-core.tar
    - docker load < kdb-insights-core.tar
    - wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
    - chmod a+x /usr/local/bin/yq
    - IMAGE_URL="$INSIGHTS_DEV_NEXUS_REGISTRY/benchmarking/nano:$(yq -r ".${TARGET}" version.yaml)"
    - docker build -t "${IMAGE_URL}" .
    - docker push "${IMAGE_URL}"
    - docker rmi "${IMAGE_URL}"
    - docker rmi kdb-insights-core:${INSIGHTSVER}
    - echo "IMAGE_URL=${IMAGE_URL}" > img.env

docker-buildpub-push:
  variables:
    TARGET: "pub"
  extends:
    - .docker-beforescript
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

docker-builddev-push:
  variables:
    TARGET: "dev"
  extends:
    - .docker-beforescript
  artifacts:
    reports:
      dotenv: img.env
  rules:
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'

.mthread:
  stage: test
  image:
    name: "${IMAGE_URL}"
    entrypoint: [""]
    pull_policy: always
  needs:
    - job: docker-builddev-push
  variables:
    DBSIZE: tiny
    APPDIR: /opt/kx/app
    FLUSH: ${APPDIR}/flush/directmount.sh
    QLIC: /tmp/qlic
    RESULTDIR: ${APPDIR}/results
    LOGDIR: ${APPDIR}/logs
  before_script:
    - mkdir -p "$QLIC"
    - echo -n "$KDB_LICENSE_B64" | base64 -d > "$QLIC/kc.lic"
    - cd ${APPDIR}
  rules:
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'

mthread-single:
  extends:
    - .mthread
  script:
    - echo "${APPDIR}/data" > ./partitions
    - ./mthread.sh 1 full delete

mthread-multi:
  extends:
    - .mthread
  script:
    - echo "${APPDIR}/data0" > ./partitions
    - echo "${APPDIR}/data1" >> ./partitions
    - ./mthread.sh 3 full delete